
Ask user to write a class called JobConfiguration. It has one function called setup() that returns a JobConf object.
The user creates a new JobConf object in that function, sets up everything and returns that JobConf object.

Then user goes to master cmd line and starts a job by typing "hdstart <input file path> <output dir> <dir of mapper, reducer and configuration files>

Upon start up, master loads the JobConfiguration class, and gets the JobConf object. Then it does sanity checks on 
the setup in JobConf object. If everything passes, it starts the job in a new thread, and waits for new jobs on cmd 
line. A better idea would be to have setup() return an array of JobConf objects to chain jobs, ordered by the 
order in which they want them to run.

----------------------

* Create folders for all reducers before hand - Done
* Make sure partition folders are empty before each job - Done for now commented out.
* Reducer should only create part files when needed - Done
* Fault tolerance 
* Add threads to worker
* Add job tracker thread to master